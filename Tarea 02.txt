#include <iostream>
using namespace std;

int *Vector = NULL; // Creando el vector dinamico
int contador = 0;   // Creando un contador para los elementos del vector
int maximo = 0;     // Tamaño maximo del vector

void Resize(); // Creacion de la función Resize

void Insertar(int elemento) 
{
    if (contador == maximo) // Si el vector está lleno se llama a la subfucnion Resize
	{ 
        Resize();
    }
    Vector[contador++] = elemento; // Inserta el elemento en el vector
}

void Resize() 
{
    const int aumento = 5; // Aumento del tamaño del vector
    int *pTemporal = new int[maximo + aumento]; // Crea un nuevo vector más grande
    for (int i = 0; i < maximo; i++) 
	{    
        pTemporal[i] = Vector[i];// Copia los elementos al nuevo vector
    }
    delete[] Vector;   // Libera la memoria eliminando el antiguo Vector
    Vector = pTemporal;    // Actualiza el nuevo Vector
    maximo += aumento;   // Incrementa el tamaño máximo
}

void Mostrar() {
    cout << "Elementos en el arreglo: ";
    for (int i = 0; i < contador; i++) {
        cout << Vector[i] << " ";
    }
    cout << endl;
    cout << "Cantidad de elementos almacenados: " << contador << endl;
}

int Buscar(int elemento) {
    for (int i = 0; i < contador; i++) {
        if (Vector[i] == elemento) {
            return i; // Devuelve la posición del elemento si lo encuentra
        }
    }
    return -1; // Devuelve -1 si no encuentra el elemento
}

void Borrar(int elemento) 
{
    int posicion = Buscar(elemento); // Llama a la subfunción Buscar
    if (posicion != -1) 
	{
        for (int i = posicion; i < contador - 1; i++) 
		{
            Vector[i] = Vector[i + 1]; // Desplaza los elementos hacia la izquierda
        }
        contador--; // Actualiza la cantidad de elementos luego de borrar un elemento
        cout << "Elemento " << elemento << " eliminado correctamente." << endl;
    } else 
	{
        cout << "Elemento " << elemento << " no encontrado." << endl;
    }
}

int main() {

    Insertar(10); // Inserta elemento 10
    Insertar(20); // Inserta elemento 20
    Insertar(30); // Inserta elemento 30
    Insertar(40);
    Insertar(50);

    Mostrar(); // Muestra los elementos del arreglo
 
    Insertar(60);
    Mostrar();

    Borrar(20); // Borra el elemento 20
    Mostrar(); // Muestra los elementos del arreglo después de eliminar

    Borrar(100); // Intenta borrar un elemento que no existe
    Mostrar(); // Muestra los elementos del arreglo después

    return 0;
}